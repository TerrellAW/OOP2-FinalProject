@page "/calendar"

<!--
    TODO:
        - Highlight Days with future Event
            > Display list of events for that date
            > Clicking event in list opens event viewer
-->
<h1>Calendar </h1>
    <h2>@DisplayMonthAndYear()</h2>
    <!--Buttons will appear as arrows for changing the month forwards or backwards-->
    <div class="nav-container">
    <div @onclick="ChangeToPreviousMonth" class="bi bi-left-arrow-calendar"></div>
    <div @onclick="ChangeToNextMonth" class="bi bi-right-arrow-calendar"></div>
</div>

<div class="Calendar-header">
    <ul class="week-container">
        <li>Sunday</li>
        <li>Monday</li>
        <li>Tuesday</li>
        <li>Wednesday</li>
        <li>Thursday</li>
        <li>Friday</li>
        <li>Saturday</li>
    </ul>
</div>
<div class="calendar-template">
    @foreach (var day in GetDaysInCurrentMonth())
    {
        @if (day != -1) 
        {
            <button @onclick="() => OnDayClick(new DateTime(currentDate.Year, currentDate.Month, day))" class="date-button">@day</button>
        }
        else
        {
            <button class="date-button"></button>
           
        }
    }
</div>
<div class="mb-5"></div>

@code {
    private DateTime currentDate = DateTime.Now;

    [Parameter]
    public EventCallback<DateTime> DisplayDay { get; set; }

    private void ChangeToNextMonth()
    {
        currentDate = currentDate.AddMonths(1);
    }

    private void ChangeToPreviousMonth()
    {
        currentDate = currentDate.AddMonths(-1);
    }

    private string DisplayMonthAndYear()
    {
        return currentDate.ToString("MMMM yyyy");
    }

    private List<int> GetDaysInCurrentMonth()
    {
        List<int> days = new List<int>();

        DateTime firstDayOfMonth = new DateTime(currentDate.Year, currentDate.Month, 1);
        int daysInMonth = DateTime.DaysInMonth(currentDate.Year, currentDate.Month);

        int dayOfWeek = (int)firstDayOfMonth.DayOfWeek;
        for (int i = 0; i < dayOfWeek; i++)
        {
            days.Add(-1); 
        }

        for (int day = 1; day <= daysInMonth; day++)
        {
            days.Add(day);
        }

        return days;
    }

    private void OnDayClick(DateTime date)
    {
        DisplayDay.InvokeAsync(date);
    }
}
