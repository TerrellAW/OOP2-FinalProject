@page "/calendar"

<!--
    TODO: Create a Calendar using three lists and CSS:
    - List 1: Months, dependent on enum
    - List 2: Days, dependent on enum
    - List 3: Dates, numbers dependent on System.DateOnly and matching datetime format from API
    - CSS: Use CSS to style Calendar
        > Month on top
        > Days under Month spread out horizontally
        > Dates properly appearing under their corresponding day

    Interactive, can switch months and click on days.
    When a day is clicked:
        - Display a button to enter New Event page
        - Display Weather for that day or "Weather not available for this day"
        - Highlight Days with future Event
            > If Day has event, display button to enter EventViewer page for that Day instead
            > If Day has past event, display button to enter EventHistory for that Day instead

    Create Calendar here so it can be reused as a component.

    FOR Ishamjot:
    Focus on the CSS, enums and dates haven't been set up yet but you can set them up if you want/have time.
    See if you can make each day a button that can be clicked.
-->

<h1>Calendar</h1>

<ul>
    <li>@DisplayMonthName()</li>
</ul>
<ul>
    <li>Sunday</li>
    <li>Monday</li>
    <li>Tuesday</li>
    <li>Wednesday</li>
    <li>Thursday</li>
    <li>Friday</li>
    <li>Saturday</li>
</ul>

@code {
    // TODO: 
    // 1. Allow displayed month to be changed by buttons, use a bool to determine if calendar should display default month or not

    private Month GetCurrentMonth()
    {
        DateTime currentDate = DateTime.Now;

        Year currentYear = new Year(currentDate.Year);

        Month currentMonth = new Month();

        currentMonth.MonthNumber = currentDate.Month;
        currentMonth.MonthName = currentMonth.GetMonthName(currentMonth.MonthNumber);
        currentMonth.SetDaysInMonth(currentMonth.MonthNumber, currentYear);

        return currentMonth;
    }

    private string DisplayMonthName()
    {
        Month currentMonth = GetCurrentMonth();

        return currentMonth.MonthName;
    }
}
